	Серверная часть реализована при помощи ASP.NET.core. Для базы данных можно использовать
API/docker-compose.yml файл для работы с doker-ом. База данных состоит из трех таблиц. Coins имеет
пять полей: Id, Value - стоимость, Active - активирована или заблокирована монета, Quantity -
колличество, UserBalance - колличество принятых монет. Таблица Drinks имеет так же пять полей:
Id, Name, Price, Picture, Quantity. Изображения формата jpeg хранятся ввиде двоичных данных, 
которые. Таблица Automate имеет два поля: Id, Balance - для хранения баланса не выданных монет.

	Для работы с базой данных используется ORM Entity Framework. Перед первым запуском надо
применить команду "dotnet ef database update" в консоли находясь в папке API. Доступ к базе данных
осуществляется двумя сервисами инжектированными в компоненты. Для эндпойнтов используются так же
два контроллера для монет и напитков.
 

	Клиентская часть приложения реализована на фреймворке Angular.
Для загрузки данных с базы данных используются два сервиса, для сущностей напитков и монет, которые
инжектируются в компоненты. Сервисы возвращают Observable в компоненты, на которые они подписываются.

	Доступ к странице администрирования состояния осуществляется с передачей в параметре запроса
ключ: 'this_is-a_secret' по адресу http://localhost:4200/admin?key=this_is-a_secret. Валидность
данного ключа проверяется в guard-e.

	Необязательные задачи не реализованы.